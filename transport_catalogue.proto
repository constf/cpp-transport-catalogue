syntax = "proto3";

package tc_serialize;


// Bus stop messages
message Coordinates {
  double lattitude = 1;
  double longitude = 2;
}

message Stop {
  uint32 id_stop = 1;
  string name = 2;
  Coordinates coords = 3;
}

message StopsList {
  repeated Stop all_stops = 1;
}



// Stop distance messages
message DistanceBetweenStops {
  uint32 from_id = 1;
  uint32 to_id = 2;
  uint64 distance = 3;
}

message StopDistanceIndex {
  repeated DistanceBetweenStops all_stops_distance_index = 1;
}



// Bus routes messages
message BusRoute {
  string bus_name = 1;
  int32 route_type = 2;
  repeated uint32 stop_ids = 3;
}

message AllRoutesList {
  repeated BusRoute routes_list = 1;
}



// Render settings
message Point {
  double x = 1;
  double y = 2;
}

message RGB {
  uint32 red = 1;
  uint32 green = 2;
  uint32 blue = 3;
}

message RGBA {
  uint32 red = 1;
  uint32 green = 2;
  uint32 blue = 3;
  double opacity = 4;
}

message Color{
  string color_string = 1;
  RGB color_rgb = 2;
  RGBA color_rgba = 3;
}

message RenderSettings {
  double width = 1;
  double height = 2;
  double padding = 3;
  double line_width = 4;
  double stop_radius = 5;

  double bus_label_font_size = 6;
  Point bus_label_offset = 7;

  double stop_label_font_size = 8;
  Point stop_label_offset = 9;

  Color underlayer_color = 10;
  double underlayer_width = 11;

  repeated Color color_palette = 12;
}


// Routing settings
message RoutingSettings {
  int64 bus_wait_time = 1;
  double bus_velocity = 2;
}


// TCRouterGraph, for a dictionay pair
message StopOnRoutePB {
  uint64 stop_number = 1; // dictionary pair A
  uint32 stop_id = 2;
  string bus_name = 3;
  uint64 vertex_id = 4; // dictionay pair B
}

// TwoStopsLink message, for a dictionay pair
message TwoStopsLinkPB {
  string bus_name = 1;
  uint64 stop_from = 2;
  uint64 stop_to = 3;
  uint64 num_of_stops = 4;
  uint64 edge_id = 5;
}

// DirectedWeightedGraph class
// Edge message
message EdgePB {
  uint64 from = 1;
  uint64 to = 2;
  double weight = 3;
}
// Edge vector in DirectedWeightedGraph class
message EdgeVectorPB {
  repeated EdgePB edges = 1;
}
// Incidence list, first vector
message IncListPB {
  repeated uint64 list = 1;
}
// Incidence list, vector of vectors
message IncidenceListPB {
  repeated IncListPB lists = 1;
}

message TCGraphRouter {
  repeated StopOnRoutePB tc_router_stops_ = 1;
  repeated TwoStopsLinkPB tc_router_links = 2;
  uint64 edge_count = 3;
  uint64 vertex_id_count = 4;
  EdgeVectorPB graph_edges = 5;
  IncidenceListPB graph_incidence_list = 6;
}

// Router class
//RouteInternalData
message RouteIntDataPB {
  double weight = 1;
  uint64 prev_edge = 2;
  bool prev_edge_empty = 3;
  bool data_empty = 4;
}
message VertexCountListPB {
  repeated RouteIntDataPB vertex_list = 1;
}
message RoutesInternalDataListsPB {
  repeated VertexCountListPB routes_list = 1;
}



// Complete transport catalogue
message TransportCatalogue {
  StopsList stops = 1;
  StopDistanceIndex index = 2;
  AllRoutesList routes = 3;
  RenderSettings render_settings = 4;
  RoutingSettings routing_settings = 5;
  RoutesInternalDataListsPB router_routes_int_data = 10;
  TCGraphRouter tc_graph_router = 11;
}
